name: Build and Package

on:
  push:
  workflow_dispatch:
  workflow_call:

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Build Frontend
      working-directory: frontend
      run: |
        npm ci
        npm run build

    - name: Upload frontend build
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: backend/static
        retention-days: 1

  build-backend:
    needs: [build-frontend]
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade pyinstaller wheel importlib_metadata
        pip install -r requirements.txt

    - name: Download frontend build
      uses: actions/download-artifact@v4
      with:
        name: frontend-build
        path: backend/static

    - name: Build Python application
      shell: cmd
      run: |
        python -m backend.version --write-version
        pyinstaller --name yumi_player --onefile ^
          --add-data "backend/static;backend/static" ^
          --add-data "backend/migrations;backend/migrations" ^
          --recursive-copy-metadata "tortoise-orm" ^
          --hidden-import "tortoise.backends.sqlite" ^
          --hidden-import "aerich.ddl.sqlite" ^
          --hidden-import "certifi" ^
          --noconfirm --clean main.py
        move 开启局域网访问.cmd dist/

    - name: Upload base artifacts
      uses: actions/upload-artifact@v4
      with:
        name: yumi_player-windows
        path: |
          dist/yumi_player.exe
          dist/开启局域网访问.cmd
        retention-days: 1

  build-ffmpeg:
    uses: ./.github/workflows/build-ffmpeg.yml

  bundle-ffmpeg:
    needs: [build-backend, build-ffmpeg]
    runs-on: ubuntu-latest

    steps:
    - name: Download main artifacts
      uses: actions/download-artifact@v4
      with:
        name: yumi_player-windows
        path: dist

    - name: Download FFmpeg artifacts
      uses: actions/download-artifact@v4
      with:
        name: ffmpeg-minimal
        path: dist

    - name: Upload bundled artifacts
      uses: actions/upload-artifact@v4
      with:
        name: yumi_player-windows-ffmpeg
        path: |
          dist/yumi_player.exe
          dist/ffmpeg.exe
          dist/ffmpeg-LICENSE.txt
          dist/开启局域网访问.cmd

    - name: Remove intermediate artifacts
      uses: geekyeggo/delete-artifact@v5
      with:
          name: |
            frontend-build
            yumi_player-windows
            ffmpeg-minimal
